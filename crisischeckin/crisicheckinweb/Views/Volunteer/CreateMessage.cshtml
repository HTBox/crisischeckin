@using Common
@using Microsoft.Web.Mvc
@model crisicheckinweb.ViewModels.SendMessageToAllVolunteersByDisasterViewModel
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "Send Message To Volunteers By Disaster";
}

<div class="col-lg-6 col-sm-12 col-xs-12 col-md-6">
    @using (Html.BeginForm("SendMessageToVolunteersByDisaster", "Volunteer"))
    {
        @Html.HiddenFor(m => m.DisasterId)

        <h3>Send Message To Volunteers: @Model.DisasterName</h3>
        @Html.ValidationSummary()

        <div class="form-group required">
            @Html.LabelFor(m => m.Subject)
            @Html.TextBoxFor(m => m.Subject, new { @class = "form-control" })
        </div>
        <div class="form-group required">
            @Html.LabelFor(m => m.SelectedClusterIds)
            @Html.ListBoxFor(m => m.SelectedClusterIds,
                new MultiSelectList(@Model.Clusters, "Id", "Name", @Model.SelectedClusterIds),
                new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.CheckBoxFor(m => m.ClusterCoordinatorsOnly)
            @Html.LabelFor(m => m.ClusterCoordinatorsOnly)
        </div>
        <div class="form-group">
            @Html.CheckBoxFor(m => m.CheckedInOnly)
            @Html.LabelFor(m => m.CheckedInOnly)
        </div>
        <div class="form-group">
            @Html.CheckBoxFor(m => m.IsSMSMessage)
            @Html.LabelFor(m => m.IsSMSMessage)
        </div>
        <div class="form-group required">
            @Html.LabelFor(m => m.Message)
            @Html.TextAreaFor(m => m.Message, 25, 76, new { @class = "form-control" })
        </div>

        <div class="form-group pull-right">
            <input type="submit" value="Send" class="btn btn-success" />
            <span id="warningMessage"></span>
        </div>
    }
</div>

@section scripts
{
    <script type="text/javascript">
        (function($) {
            $('#Message').bind('keyup', function() {
                ValidateMessageLength();
            });

            $('#IsSMSMessage').click(function () {
                ValidateMessageLength();
            });

            ValidateMessageLength();

        })(jQuery);

        function ValidateMessageLength() {

            var messageLength = $('#Message').val().length;
            var isSMS = $('#IsSMSMessage').prop('checked');
            var errorMessage = "";
            var isValid = true;
            var smsMaxLength = parseInt('@Constants.TwilioMessageLength');
            if (isSMS === true) {
                if (messageLength > smsMaxLength - 30) {
                    errorMessage = 'The message can only be ' + smsMaxLength + ' characters long. It is currently ' + messageLength;
                    if (messageLength > smsMaxLength) {
                        isValid = false;
                    } else {
                        isValid = true;
                    }
                } else {
                    errorMessage = "";
                }
            } else {
                if (messageLength > 600) {
                    errorMessage = 'The message can only be 640 characters long. It is currently ' + messageLength;
                    if (messageLength > 640) {
                        isValid = false;
                    } else {
                        isValid = true;
                    }
                } else {
                    errorMessage = "";
                }
            }

            $('#warningMessage').text(errorMessage);
            if (isValid === true)
                $('#warningMessage').css("color", "black");
            else
                $('#warningMessage').css("color", "red");

        }
    </script>
}
