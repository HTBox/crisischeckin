@using crisicheckinweb.Helpers
@model crisicheckinweb.ViewModels.AdminRequestIndexViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Requests</h2>
<p>Put out requests to the volunteer community and people can assign themselves to them.</p>

<div class="btn-toolbar" role="toolbar" aria-label="Toolbar with button groups">
    <div class="btn-group" role="group" aria-label="First group">
        @Html.ActionLink("Create New", "Create", new { }, new { @class = "btn btn-black" })
    </div>
    <div class="btn-group" role="group" aria-label="Second group">
        <button type="button" class="btn btn-black" id="filter-button">Filter</button>
    </div>
</div>

<div id="filter-holder" style="display: none;">
    @Html.Partial("_FilterRequestPartial", Model.RequestSearch)
</div>

<br />

<table class="table table-striped table-bordered">
    <tr class="ht-header">
        <th>
            @Html.SortLink(@Html.DisplayNameFor(model => model.RequestSearch.Description).ToString(), "Index")
        </th>
        <th>
            @Html.SortLink(@Html.DisplayNameFor(model => model.RequestSearch.Location).ToString(), "Index")
        </th>
        <th>
            @Html.SortLink("Created By", "Index")
        </th>
        <th>
            @Html.SortLink(@Html.DisplayNameFor(model => model.RequestSearch.CreatedDate).ToString(), "Index")
        </th>
        <th>
            @Html.SortLink(@Html.DisplayNameFor(model => model.RequestSearch.EndDate).ToString(), "Index")
        </th>
        <th>
            @Html.SortLink(@Html.DisplayNameFor(model => model.RequestSearch.Completed).ToString(), "Index")
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Requests)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Creator.FirstName)
            </td>
            <td>
                @item.CreatedDate.ToShortDateString()
            </td>
            <td>
                @item.EndDate.ToShortDateString()
            </td>
            <td>
                @if (item.Completed == false)
                {
                    if (item.AssigneeId.HasValue)
                    {
                        @Html.Raw(new HtmlString("<p>Assigned (" + @item.Assignee.FullName + ")</p>"))
                        
                    }
                    else
                    {
                        @Html.Raw(new HtmlString("<p>Unassigned</p>"))
                    }
                }
                else
                {
                    @Html.Raw(new HtmlString("<p>Completed</p>"))
                }
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.RequestId }) |
                @Html.ActionLink("Details", "Details", new { id = item.RequestId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.RequestId })
            </td>
        </tr>
    }

</table>


@section scripts
{
    <script type="text/javascript">
        (function ($) {
            $(document).ready(function () {
                $("#dp_startDate").datepicker();
                $("#dp_endDate").datepicker();

                $("#filter-button").click(function () {
                    $("#filter-holder").toggle("slow");
                });
            });
        })(jQuery);
    </script>
}