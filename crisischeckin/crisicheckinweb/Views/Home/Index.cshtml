@model crisicheckinweb.ViewModels.VolunteerViewModel
@using Models
@{
  ViewBag.Title = "Volunteer Home";
  Layout = "~/Views/Shared/_VolunteerLayout.cshtml";
}

<h2>Volunteer Home</h2>

@{
  var commitmentForToday = Model.MyCommitments.FirstOrDefault(x => x.StartDate <= DateTime.Today && DateTime.Today <= x.EndDate);
  if (commitmentForToday != null)
  {
      <div class="panel panel-default">
          <div class="panel-heading">
              <h3 class="panel-title">Commitment for today</h3>
          </div>
          <div class="panel-body">
              <dl class="dl-horizontal">
                  <dt>Disaster: </dt>
                  <dd>@commitmentForToday.Disaster.Name</dd>
                  @if(Model.Person.Organization != null)
                  {
                      <dt>Organization: </dt>
                      <dd>@Model.Person.Organization.OrganizationName</dd>
                  }
                  <dt>Location: </dt>
                  <dd>@commitmentForToday.VolunteerType.Name</dd>
                  <dt>Cluster: </dt>
                  <dd>@commitmentForToday.Cluster.Name</dd>
                  <dt>Coordinators: </dt>
                  <dd>
                      @foreach (var clusterCoordinator in Model.ClusterCoordinators.Where(cc => cc.DisasterId == commitmentForToday.DisasterId))
                      {
                          <span>@(clusterCoordinator.Person.LastName + ", " + clusterCoordinator.Person.FirstName) (Phone - @(clusterCoordinator.Person.PhoneNumber) | Email - @(clusterCoordinator.Person.Email))
                </span><br/>
                      }
                  </dd>
              </dl>
              @foreach (var action in Model.AvailableActions)
              {
                  using (Html.BeginForm(action.ActionName, "Home", FormMethod.Post, new {@class = "form-horizontal", id = @action.FormId}))
                  {
                      @Html.AntiForgeryToken()
                      @Html.Hidden("commitmentId", commitmentForToday.Id)
                      <button class="btn btn-black" type="submit" id="@action.ButtonId">@action.ButtonText</button>
                      <span>@action.Description</span>
                  }
                  <br/>
              }
          </div>
      </div>

    <div class="modal fade" id="delayed-modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Please Modify Your Availability Dates</h4>
                </div>
                <div class="modal-body form-horizontal">
                    <div class="form-group">
                        <label class="col-md-2 control-label">Start Date</label>
                        <div class="col-md-3">
                            <input class="form-control" readonly="readonly" type="text" value="@commitmentForToday.StartDate.ToShortDateString()"
                                   id="new-start-date"/>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-2 control-label">End Date</label>
                        <div class="col-md-3"><input class="form-control" readonly="readonly" type="text" value="@commitmentForToday.EndDate.ToShortDateString()" id="new-end-date" /></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="new-dates-button">Save changes</button>
                </div>
            </div>
        </div>
    </div>
    }
}

@if (!Model.MyCommitments.Any())
{
    <p>Please enter the information below to make a commitment to checkin to a disaster.</p>
}
else
{
  <h3>My Commitments</h3>
  <table class="table table-striped table-bordered">
    <tr class="ht-header">
      <th>Disaster Name</th>
      <th>Activity</th>
      <th>Start Date</th>
      <th>End Date</th>
      <th>Location</th>
      @if (Model.MyCommitments.Any())
      {
        <th>&nbsp;</th>
      }
    </tr>
    @foreach (var comm in Model.MyCommitments)
    {
      <tr>
        <td>@comm.Disaster.Name</td>
        <td>@comm.Cluster.Name</td>
        <td>@comm.StartDate.ToShortDateString()</td>
        <td>@comm.EndDate.ToShortDateString()</td>
        <td>@comm.VolunteerType.Name
            @if (!String.IsNullOrWhiteSpace(comm.Location))
            {
                @(" (" + comm.Location + ")")
            }
        </td>
        @using (Html.BeginForm("RemoveCommitment", "Home", FormMethod.Post, new { @class = "navbar-form" }))
        {
          @Html.AntiForgeryToken()
          @Html.HiddenFor(m => m.RemoveCommitmentId, new { @Value = comm.Id })
          <td>
            <button class="btn btn-danger btn-xs" type="submit"><i class="glyphicon glyphicon-remove"></i> Remove</button>
          </td>
        }
      </tr>
    }
  </table>
}

<h4>Make a New Commitment</h4>
@using (Html.BeginForm("Assign", "Home"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()


    <table class="table">
        <thead>
            <tr>
                <th>Disaster <span style="color:red;">*</span></th>
                <th>Activity</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Location <span style="color:red;">*</span></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@Html.DropDownListFor(m => m.SelectedDisasterId, new SelectList(Model.Disasters, "Id", "Name", Model.SelectedDisasterId), "-- Choose One --", new { @class = "form-control", @id = "disasterList" })</td>
                <td>@Html.DropDownListFor(m => m.SelectedClusterId, new SelectList(Model.DisasterClusters, "Cluster.Id", "Cluster.Name", Model.SelectedClusterId), new { @class = "form-control", @id = "activityList" })</td>
                <td>@Html.TextBoxFor(m => m.SelectedStartDate, new { id = "dp_startDate", @class = "form-control" })</td>
                <td>@Html.TextBoxFor(m => m.SelectedEndDate, new { id = "dp_endDate", @class = "form-control" })</td>
                <td>
                    @Html.DropDownListFor(
                    m => m.VolunteerType,
                    selectList: new SelectList(Model.VolunteerTypes, "Id", "Name", Model.VolunteerType),
                    optionLabel: "-- Choose One --",
                    htmlAttributes: new { @class = "form-control" })<br />
                    @Html.TextBoxFor(m => m.Location, new { @class = "form-control" })
                </td>
                <td><input class="btn btn-black" id="GoButton" type="submit" value="Volunteer" /></td>
            </tr>
        </tbody>
    </table>
}


<h3>My Organization Resources</h3>
<table class="table table-striped table-bordered">
    <tr class="ht-header">
        <th>Disaster Name</th>
        <th>Description</th>
        <th>Quantity</th>
        <th>Type</th>
        <th>Start Date</th>
        <th>End Date</th>
        <th>Location</th>
        <th>&nbsp;</th>
    </tr>
    @foreach (var r in Model.MyOrgResources)
    {
        <tr>
            <td>@r.Disaster.Name</td>
            <td>@r.Description</td>
            <td>@r.Qty</td>
            <td>@r.ResourceType.TypeName</td>
            <td>@r.StartOfAvailability.ToShortDateString()</td>
            <td>@r.EndOfAvailability.ToShortDateString()</td>
            <td>@r.Location.AddressLine1</td>
        @using (Html.BeginForm("RemoveResource", "Home", FormMethod.Post, new { @class = "navbar-form" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.RemoveResourceId, new { @Value = r.ResourceId })
            <td>
                <button class="btn btn-danger btn-xs" type="submit"><i class="glyphicon glyphicon-remove"></i> Remove</button>
            </td>
        }
    </tr>
    }
</table>

<h4>Report New Data</h4>
@using (Html.BeginForm("CheckinResource", "Home"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()


    <table class="table">
        <thead>
            <tr>
                <th>Disaster <span style="color:red;">*</span></th>
                <th>Description<span style="color:red;">*</span></th>
                <th>Quantity<span style="color:red;">*</span></th>
                <th>Type<span style="color:red;">*</span></th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Location <span style="color:red;">*</span></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@Html.DropDownListFor(m => m.SelectedDisasterId, new SelectList(Model.Disasters, "Id", "Name", Model.SelectedDisasterId), "-- Choose One --", new { @class = "form-control", @id = "disasterList" })</td>
                <td>@Html.TextBoxFor(m => m.Description)</td>
                <td>@Html.TextBoxFor(m => m.Qty)</td>
                <td>@Html.DropDownListFor(m => m.SelectedResourceTypeId, new SelectList(Model.ResourceTypes, "ResourceTypeId", "TypeName", Model.SelectedResourceTypeId), "-- Choose One --", new { @class = "form-control", @id = "resourcetypelist" })</td>
                <td>@Html.TextBoxFor(m => m.ResourceStartDate, new { id = "dp_resStartDate", @class = "form-control" })</td>
                <td>@Html.TextBoxFor(m => m.ResourceEndDate, new { id = "dp_resEndDate", @class = "form-control" })</td>
                <td>@Html.TextBoxFor(m => m.Location, new { @class = "form-control" })</td>
                <td><input class="btn btn-black" id="GoButton" type="submit" value="Checkin" /></td>
            </tr>
        </tbody>
    </table>
}


@section scripts
{
  <script type="text/javascript" src="~/scripts/App/home.js">
    
    
      
    </script>
}
